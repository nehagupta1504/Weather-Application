{"version":3,"sources":["component/wheather/weatherCard.js","component/wheather/weather.js","App.js","index.js"],"names":["WeatherCard","tempInfo","React","useState","weatherState","setweatherState","temp","humidity","pressure","weatherMood","cityName","speed","country","sunset","date","Date","timeStr","getHours","getMinutes","useEffect","className","toLocaleString","require","config","Wheather","searchValue","setsearchValue","settempInfo","getWheatherInfo","a","url","fetch","res","json","data","main","weather","name","wind","sys","alert","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81bdd579.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst WeatherCard = ({ tempInfo }) => {\r\n  const [weatherState, setweatherState] = React.useState(\"\");\r\n  const {\r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    weatherMood,\r\n    cityName,\r\n    speed,\r\n    country,\r\n    sunset,\r\n  } = tempInfo;\r\n  let sec = sunset;\r\n  let date = new Date(sec * 1000); //Time in millisec\r\n  let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n  useEffect(() => {\r\n    if (weatherMood) {\r\n      switch (weatherMood) {\r\n        case \"Clouds\":\r\n          setweatherState(\"wi-day-cloudy\");\r\n          break;\r\n        case \"Haze\":\r\n          setweatherState(\"wi-fog\");\r\n          break;\r\n\r\n        case \"Clear\":\r\n          setweatherState(\"wi-day-Sunny\");\r\n          break;\r\n        case \"Mist\":\r\n          setweatherState(\"wi-dust\");\r\n          break;\r\n        default:\r\n          setweatherState(\"wi-day-Sunny\");\r\n          break;\r\n      }\r\n    }\r\n  }, [weatherMood]); //If weathermood values changes then only call this\r\n  return (\r\n    <>\r\n      <article className=\"widget\">\r\n        <div className=\"weatherIcon\">\r\n          <i className={`wi ${weatherState}`}></i>\r\n        </div>\r\n        <div className=\"weatherInfo\">\r\n          <div className=\"temperature\">\r\n            <span>{temp}&deg;</span>\r\n          </div>\r\n          <div className=\"description\">\r\n            <div className=\"weatherCondition\">{weatherMood}</div>\r\n            <div className=\"place\">\r\n              {cityName}, {country}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"date\">{new Date().toLocaleString()}</div>\r\n        {/* Our 4 divided section */}\r\n        <div className=\"extra-temp\">\r\n          <div className=\"temp-info-minmax\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className=\"wi wi-sunset\"></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {timeStr} PM\r\n                <br />\r\n                Sunset\r\n              </p>\r\n            </div>\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className=\"wi wi-humidity\"></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {humidity} <br />\r\n                Humidity\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"weather-extra-info\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className=\"wi wi-rain\"></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {pressure}\r\n                <br />\r\n                Pressure\r\n              </p>\r\n            </div>\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className=\"wi wi-strong-wind\"></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {speed} <br />\r\n                Wind\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","// api.openweathermap.org/data/2.5/weather?q=Gwalior&appid=935847ca520235df50f05ab2271da871\r\n\r\nimport { React, useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport WeatherCard from \"./weatherCard\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst Wheather = () => {\r\n  const [searchValue, setsearchValue] = useState(\"Gwalior\");\r\n  const [tempInfo, settempInfo] = useState({});\r\n  const getWheatherInfo = async () => {\r\n    try {\r\n      let url = `http://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=935847ca520235df50f05ab2271da871`;\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n      const { temp, humidity, pressure } = data.main;\r\n      const { main: weatherMood } = data.weather[0]; //destructuring+renaming\r\n      const { name: cityName } = data;\r\n      const { speed } = data.wind;\r\n      const { country, sunset } = data.sys;\r\n      const myNewWeatherInfo = {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weatherMood,\r\n        cityName,\r\n        speed,\r\n        country,\r\n        sunset,\r\n      };\r\n      settempInfo(myNewWeatherInfo);\r\n    } catch (error) {\r\n      alert(`No city with ${searchValue} name exists`);\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getWheatherInfo();\r\n  }, []); //only run on page load or refresh\r\n  return (\r\n    <>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search City...\"\r\n            autoFocus\r\n            id=\"search\"\r\n            className=\"searchTerm\"\r\n            value={searchValue}\r\n            onChange={(e) => {\r\n              setsearchValue(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            className=\"searchButton\"\r\n            type=\"button\"\r\n            onClick={getWheatherInfo}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* Our temp card */}\r\n      <WeatherCard tempInfo={tempInfo} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wheather;\r\n","import Wheather from \"./component/wheather/weather\";\nrequire(\"dotenv\").config();\nfunction App() {\n  return <Wheather />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}